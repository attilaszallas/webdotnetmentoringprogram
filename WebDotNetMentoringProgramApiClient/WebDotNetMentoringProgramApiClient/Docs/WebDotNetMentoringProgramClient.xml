<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetCategoriesAsync(RequestContext)">
<example>
This sample shows how to call GetCategoriesAsync.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = await client.GetCategoriesAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetCategories(RequestContext)">
<example>
This sample shows how to call GetCategories.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = client.GetCategories(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetImageByIdAsync(int?,RequestContext)">
<example>
This sample shows how to call GetImageByIdAsync.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = await client.GetImageByIdAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetImageByIdAsync with all parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = await client.GetImageByIdAsync(1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetImageById(int?,RequestContext)">
<example>
This sample shows how to call GetImageById.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = client.GetImageById();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetImageById with all parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = client.GetImageById(1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="UpdateImageAsync(RequestContent,ContentType,int?,RequestContext)">
<example>
This sample shows how to call UpdateImageAsync with required parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = await client.UpdateImageAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateImageAsync with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = await client.UpdateImageAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="UpdateImage(RequestContent,ContentType,int?,RequestContext)">
<example>
This sample shows how to call UpdateImage with required parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = client.UpdateImage(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateImage with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = client.UpdateImage(RequestContent.Create(data), ContentType.ApplicationOctetStream, 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetProductsAsync(RequestContext)">
<example>
This sample shows how to call GetProductsAsync.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = await client.GetProductsAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetProducts(RequestContext)">
<example>
This sample shows how to call GetProducts.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

Response response = client.GetProducts(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="CreateProductAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call CreateProductAsync with required parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = await client.CreateProductAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateProductAsync with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {
    productID = 1234,
    productName = "<productName>",
    supplierID = 1234,
    categoryID = 1234,
    quantityPerUnit = "<quantityPerUnit>",
    unitPrice = 123.45d,
    unitsInStock = 1234,
    unitsOnOrder = 1234,
    reorderLevel = 1234,
    discontinued = true,
};

Response response = await client.CreateProductAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="CreateProduct(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call CreateProduct with required parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = client.CreateProduct(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateProduct with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {
    productID = 1234,
    productName = "<productName>",
    supplierID = 1234,
    categoryID = 1234,
    quantityPerUnit = "<quantityPerUnit>",
    unitPrice = 123.45d,
    unitsInStock = 1234,
    unitsOnOrder = 1234,
    reorderLevel = 1234,
    discontinued = true,
};

Response response = client.CreateProduct(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="UpdateProductAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call UpdateProductAsync with required parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = await client.UpdateProductAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateProductAsync with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {
    productID = 1234,
    productName = "<productName>",
    supplierID = 1234,
    categoryID = 1234,
    quantityPerUnit = "<quantityPerUnit>",
    unitPrice = 123.45d,
    unitsInStock = 1234,
    unitsOnOrder = 1234,
    reorderLevel = 1234,
    discontinued = true,
};

Response response = await client.UpdateProductAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="UpdateProduct(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call UpdateProduct with required parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = client.UpdateProduct(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateProduct with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {
    productID = 1234,
    productName = "<productName>",
    supplierID = 1234,
    categoryID = 1234,
    quantityPerUnit = "<quantityPerUnit>",
    unitPrice = 123.45d,
    unitsInStock = 1234,
    unitsOnOrder = 1234,
    reorderLevel = 1234,
    discontinued = true,
};

Response response = client.UpdateProduct(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DeleteProductAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call DeleteProductAsync with required parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = await client.DeleteProductAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteProductAsync with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {
    productID = 1234,
    productName = "<productName>",
    supplierID = 1234,
    categoryID = 1234,
    quantityPerUnit = "<quantityPerUnit>",
    unitPrice = 123.45d,
    unitsInStock = 1234,
    unitsOnOrder = 1234,
    reorderLevel = 1234,
    discontinued = true,
};

Response response = await client.DeleteProductAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DeleteProduct(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call DeleteProduct with required parameters.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {};

Response response = client.DeleteProduct(RequestContent.Create(data), ContentType.ApplicationOctetStream);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteProduct with all parameters and request content.
<code><![CDATA[
var client = new WebDotNetMentoringProgramClient();

var data = new {
    productID = 1234,
    productName = "<productName>",
    supplierID = 1234,
    categoryID = 1234,
    quantityPerUnit = "<quantityPerUnit>",
    unitPrice = 123.45d,
    unitsInStock = 1234,
    unitsOnOrder = 1234,
    reorderLevel = 1234,
    discontinued = true,
};

Response response = client.DeleteProduct(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>